<template lang="pug">
	view
		div.test__page {{name}}
		navigator.test__btn(
			open-type="navigate"
			url="jump-page"
		)
			text jump page
		view.test__btn(@tap="tap") click loading
		view.test__btn(@tap="switchTabBar") click show or hidden TabBar
</template>

<script>
import wepy from 'wepy'
import { loading, loaded } from 'src/common/tips'

export default class extends wepy.page {
	config = {
		navigationBarTitleText: 'test page',
	}

	init () {
		console.log('testPage-init: ', this.$parent.$get)
	}

	// 自定义数据
	customData = {}
	// 自定义方法
	customFunction () {}
	// 在Page和Component共用的生命周期函数
	onLoad () {}
	// 只在Page中存在的页面生命周期函数
	onShow () {}

	// 只在Page实例中存在的配置数据，对应于原生的page.json文件
	// config = {}

	// 页面所需数据均需在这里声明，可用于模板数据绑定
	data = {
		name: '测试数据',
		isShowTabBar: true,
	}

	// 声明页面中所引用的组件，或声明组件中所引用的子组件
	components = {}

	// 声明页面所引用的Mixin实例
	mixins = []

	// 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
	methods = {
		tap () {
			loading()
			setTimeout(() => {
				loaded()
			}, 3000)
		},
		switchTabBar () {
			this.isShowTabBar = !this.isShowTabBar
		},
	}
	// 声明组件之间的事件处理函数
	events = {}
	// 声明计算属性（详见后文介绍）
	computed = {}
	// 声明数据watcher（详见后文介绍）
	watch = {
		isShowTabBar (newValue, oldValue) {
			if (newValue) wx.showTabBar()
			else wx.hideTabBar()
		},
	}
}
</script>

<style lang="stylus">
	.test__page
		font-size: 28px
		color: blue
	.test__btn
		border: 1px solid red
		margin: 10px auto
		text-align: center
</style>
